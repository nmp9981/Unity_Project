 /// <summary>
    /// 클래스 : 카메라 이동, 회전, 줌 기능
    /// </summary>
    public class CameraTransformSystem : MonoBehaviour
    {
        #region 변수 모음
        /// <summary>
        /// 조작할 카메라
        /// </summary>
        public Camera mainCamera { get; set; } = null;

        #region 카메라 이동 관련 변수
        /// <summary>
        /// 카메라 이동량
        /// </summary>
        public float moveAmount { get; set; } = 20f;
        /// <summary>
        /// 회전량
        /// </summary>
        public float rotateSpeed { get; set; } = 10f;
        /// <summary>
        /// 줌 속도
        /// </summary>
        public float zoomSpeed { get; set; } = 10f;
        #endregion 카메라 이동 관련 변수
        #endregion 변수 모음

        #region UNITY 생명주기 함수
        void Awake()
        {
            //메인 카메라 가져오기
            GetMainCam();
        }

        private void LateUpdate()
        {
            //카메라 관련 키 입력
            UpdateInputAboutCamera();
        }
        #endregion UNITY 생명주기 함수

        #region Awake 함수
        /// <summary>
        /// 메인 카메라 가져오기
        /// </summary>
        void GetMainCam()
        {
            mainCamera = GetComponent<Camera>();
        }
        #endregion Awake 함수

        #region LateUpdate 함수
        /// <summary>
        /// 기능 : 키 입력 받기
        /// </summary>
        void UpdateInputAboutCamera()
        {
            //마우스 우클릭
            if (Input.GetMouseButton(1))
            {
                //회전 입력
                float xRotateAmount = Input.GetAxis("Mouse X");
                float yRotateAmount = Input.GetAxis("Mouse Y");
                if (xRotateAmount != 0 || yRotateAmount != 0)
                {
                    CameraRotate(xRotateAmount, yRotateAmount);
                }

                //이동 입력
                float verticalAmount = Input.GetAxis("Vertical");
                float horizontalAmount = Input.GetAxis("Horizontal");
                bool isUpKey = Input.GetKey(KeyCode.Q);
                bool isDownKey = Input.GetKey(KeyCode.E);

                //이동관련 입력이 없음
                if (verticalAmount == 0 && horizontalAmount == 0 && !isUpKey && !isDownKey)
                {

                }
                else
                {
                    //카메라 이동
                    CameraMoving(verticalAmount, horizontalAmount, isUpKey, isDownKey);
                }
            }
            //마우스 휠 : 줌인
            float wheelInputAmount = Input.GetAxis("Mouse ScrollWheel");
            if (wheelInputAmount != 0)
            {
                CameraZoom(wheelInputAmount);
            }
        }
        # endregion LateUpdate 함수

        #region 카메라 기능 함수
        /// <summary>
        /// 줌인 아웃
        /// </summary>
        /// <param name="wheelInputAmount">휠 이동량</param>
        void CameraZoom(float wheelInputAmount)
        {
            //줌 거리
            float distance = wheelInputAmount * -1 * zoomSpeed;
            //화각 변경(줌 배율 변경)
            if (distance != 0)
            {
                mainCamera.fieldOfView += distance;
            }
        }

        /// <summary>
        /// 카메라 회전
        /// </summary>
        /// <param name="xAmount">수직 회전량</param>
        /// <param name="yAmount">수평 회전량</param>
        void CameraRotate(float xAmount, float yAmount)
        {
            Vector3 rot = transform.rotation.eulerAngles; // 현재 카메라의 각도를 Vector3로 반환
            rot.y += xAmount * rotateSpeed; // 마우스 X 위치 * 회전 속도
            rot.x += -1 * yAmount * rotateSpeed; // 마우스 Y 위치 * 회전 속도
            Quaternion q = Quaternion.Euler(rot); // Quaternion으로 변환
            transform.rotation = Quaternion.Slerp(transform.rotation, q, 2f); // 자연스럽게 회전
        }

        /// <summary>
        /// 카메라 이동
        /// </summary>
        /// <param name="verticalAmount">수직 이동량</param>
        /// <param name="horizontalAmount">수평 이동량</param>
        /// <param name="isUp">위키 입력 여부</param>
        /// <param name="isDown">아래키 입력 여부</param>
        void CameraMoving(float verticalAmount, float horizontalAmount, bool isUp, bool isDown)
        {
            //이동량 측정
            Vector3 moveAmountVector = transform.forward * verticalAmount + transform.right * horizontalAmount;
            moveAmountVector += transform.up * (isUp ? 1 : 0);
            moveAmountVector += transform.up * (isDown ? -1 : 0);

            // 이동량을 좌표에 반영
            if (moveAmountVector != Vector3.zero)
                transform.position += moveAmountVector * moveAmount * Time.deltaTime;
        }
        #endregion 카메라 기능 함수
